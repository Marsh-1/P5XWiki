---
interface Props {
    build: {
        Revelation: {
          "Name": string
          "Image": string
        }[]
        Artifact: {
          "Name": string
          "Image": string
        }[],
        Main: {
            Moon: string
            Star: string
            Dawn: string
        },
        Sub: string[]
    }
}

const {build} = Astro.props;
---
<!-- TODO: ADD RELEVANT REVELATION INFORMATION-->
<div>
    <h1>Recommended Revelations:</h1>
    <div class="Cards">
        <div>
            {build["Revelation"].map((curr,index)=>{
                return <div>
                    <div class="ArcanaCard">
                        <img src={curr["Image"]}></img>
                    </div>
                    <p class="name">{curr["Name"]}</p>
                </div>
            })}
        </div>
        <div>
            {build["Artifact"].map((curr,index)=>{
                return <div>
                    <div class="ArcanaCard">
                        <img src={curr["Image"]}></img>
                    </div>
                    <p class="name">{curr["Name"]}</p>
                </div>
            })}
        </div>
    </div>
    <h1>Main Stat:</h1>
    <div class="MainStat">
        <div>
            <p>Moon:</p>
            <p>{build["Main"]["Moon"]}</p>
        </div>
        <div>
            <p>Star:</p>
            <p>{build["Main"]["Star"]}</p>
        </div>
        <div>
            <p>Dawn:</p>
            <p>{build["Main"]["Dawn"]}</p>
        </div>
    </div>
    <h1>Substat Priority</h1>
    <div class='subPriority'>
        <p>{build["Sub"].map((stat,index) => {
                    if(index == build["Sub"].length-1){
                        return stat
                    }
                    return stat + " -> "
                }
            )       
        }
    </p>
    </div>
</div>

<style>

    h1{
        text-align: center;
    }

    .Cards {
        display: grid;
        grid-template-columns: repeat(2, minmax(0, 1fr));
        grid-template-rows: 1fr;
        grid-column-gap: 2rem;
        grid-row-gap: 0px;
    }
    .Cards h2 {
        margin: 0;
    }
    .Cards .ArcanaCard{
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-content: center;
    }
    .Cards .name{
        text-align: center;
    }
    .Cards .ArcanaCard img{
        max-width: 50%;
    }

    .MainStat{
        display: flex;
        flex-direction:  row;
        justify-content: space-around;  
    }

    .MainStat div p{
        text-align: center;
    }

    .subPriority{
        display: flex;
        justify-content: center;
    }
</style>