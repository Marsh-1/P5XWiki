---
import Layout from '../../layouts/Layout.astro';
import Characters from '../../data/Characters.json';
import Weapons from '../../data/Weapons.json';
import WeaponItem from '../../components/WeaponItem.astro';
import Recommendation from '../../components/Recommendation.astro';
import Role from '../../components/Role.astro';

export function getStaticPaths() {
  return [
    {params: {character: 'Mont'}},
    {params: {character: 'Joker'}},
    {params: {character: 'Rin'}},
    {params: {character: 'Puppet'}},
    {params: {character: 'Fox'}},
    {params: {character: 'Skull'}},
    {params: {character: 'Panther'}},
    {params: {character: 'Cattle'}},
    {params: {character: 'Key'}},
    {params: {character: 'Soy'}},
    {params: {character: 'Bui'}},
    {params: {character: 'Closer'}},
    {params: {character: 'Mona'}},
    {params: {character: 'Fleuret'}},
    {params: {character: 'Yuki'}},
    {params: {character: 'Riddle'}},
    {params: {character: 'Moko'}},
    {params: {character: 'Leon'}},
    {params: {character: 'Sepia'}},
    {params: {character: 'Okyann'}},
    {params: {character: 'Marian'}},
    {params: {character: 'Vino'}},
    {params: {character: 'Queen'}},
    {params: {character: 'Phoebe'}},
    {params: {character: 'Chord'}},
    {params: {character: 'Wind'}},
    {params: {character: 'Summer Closer'}},
    {params: {character: 'Summer Moko'}},
    {params: {character: 'Messa'}},
    {params: {character: 'Navi'}},
    {params: {character: 'Cherish'}},
    {params: {character: 'Noir'}}
  ];
}

const { character } = Astro.params;
const info = Characters[character];
---

<Layout title={info['Name']}>
  <main>
    <div class="FirstSection">
      <div class="CharacterCard">
        <img src=`/P5XWiki/cards/${character}Card.png`></img>
      </div>
      <div class="CharacterInfo">
        <div class="CharacterIntro">
          <h1>{info['Name']}</h1>
          <img src=`/P5XWiki/roleicons/${info['Role']}.png`></img>
        </div>
        <table>
          <tr>
            <td>Role</th> 
            <td><p>{info['Role']}</p></td>
          </tr>
          <tr>
            <td>Codename</th>
            <td><p>{info['Codename']}</p></td>
          </tr>
          <tr>
            <td>Persona</th>
            <td>{info['Persona'] && <p>{info['Persona']}</p>}</td>
          </tr>
          <tr>
            <td>Element</td>
            <td><p>{info['Element']}</p></td>
          </tr>
        </table>
      </div>
    </div>
    <div>
      <h1>Talents</h1>
      <div>
        <div>
          <div class="skilltitle">
            <div>
              <img src={`/P5XWiki/skills/${info['Talents']['1']['Icon'] || 'HEAL_AOE'}.png`}/>
            </div>
            <h2 class="skill1container">
              {info['Talents']['1']['Name']} (Lv. 10)
            </h2>
          </div>
          <input type="range" autocomplete="off" min="1" max="13" value="10" class="slider1" id="skill1">
          <p>{info['Role'] == 'Navigation' ? 'Preparation Time: ': 'Cost: '} <span style='color: magenta;'>{info['Talents']['1']['Cost']}{info['Talents']['1']['Type'] == 3 ? ' Rounds' : info['Talents']['1']['Type'] == 4 ? '% Max HP' : ' SP'}</span></p>
          <p set:html={
            info['Talents']['1']['Formula'].reduce((acc,cur) =>
            acc.replace("%s",Number.parseFloat(eval(cur.replaceAll('skillLv',`10`)).toFixed(2))),info['Talents']['1']['Description']
          )
          } class='skill1desc'></p>
        </div>
        <div>
          <div class="skilltitle">
            <div>
              <img src={`/P5XWiki/skills/${info['Talents']['2']['Icon'] || 'HEAL_AOE'}.png`}/>
            </div>
            <h2 class='skill2container'>
              {info['Talents']['2']['Name']} (Lv. 10)
            </h2>
          </div>
          <input type="range" autocomplete="off" min="1" max="13" value="10" class="slider2" id="skill2">
          <p>{info['Role'] == 'Navigation' ? 'Preparation Time: ': 'Cost: '} <span style='color: magenta;'>{info['Talents']['2']['Cost']}{info['Talents']['2']['Type'] == 3 ? ' Rounds' : info['Talents']['2']['Type'] == 4 ? '% Max HP' : ' SP'}</span></p>
          <p set:html={info['Talents']['2']['Formula'].reduce((acc,cur)=>
            acc.replace("%s",Number.parseFloat(eval(cur.replaceAll('skillLv',`10`)).toFixed(2))),info['Talents']['2']['Description']
          )} class='skill2desc'></p>
        </div>
        <div>
          <div class="skilltitle">
            <div>
              <img src={`/P5XWiki/skills/${info['Talents']['3']['Icon'] || 'HEAL_AOE'}.png`}/>
            </div>
            <h2 class='skill3container'>
              {info['Talents']['3']['Name']} (Lv. 10)
            </h2>
          </div>
          <input type="range" autocomplete="off" min="1" max="13" value="10" class="slider3" id="skill3">
          <p>{info['Role'] == 'Navigation' ? 'Preparation Time: ': 'Cost: '} <span style='color: magenta;'>{info['Talents']['3']['Cost']}{info['Talents']['3']['Type'] == 3 ? ' Rounds' : info['Talents']['3']['Type'] == 4 ? '% Max HP' : ' SP'}</span></p>
          <p set:html={info['Talents']['3']['Formula'].reduce((acc,cur)=>
            acc.replace("%s",Number.parseFloat(eval(cur.replaceAll('skillLv',`10`)).toFixed(2))),info['Talents']['3']['Description']
          )} class='skill3desc'></p>
        </div>
        <div>
          <div class="skilltitle">
            <div>
              <img src={`/P5XWiki/skills/${info['Talents']['4']['Icon'] || 'HEAL_AOE'}.png`}/>
            </div>
            <h2 class='skill4container'>
              {info['Talents']['4']['Name']} {info['Talents']['4']['Type'] == 1 ? '(Lv. 10)': ''}
            </h2>
          </div>
          {info['Talents']['4']['Type'] == 1 ? <input type="range" autocomplete="off" min="1" max="13" value="10" class="slider4" id="skill4"> : ''}
          {
            info['Talents']['4']['Type'] == 1 ? 
            <p set:html={info['Talents']['4']['Formula'].reduce((acc,cur)=>
            acc.replace("%s",Math.round(eval(cur.replaceAll('skillLv',`10`))*10)/10),info['Talents']['4']['Description']
            )} class='skill4desc'></p> : <p set:html={info['Talents']['4']['Description']} class='skill4desc'></p>
          }
        </div>
        <h1>Passive</h1>
        <div>
          <h2>{info['Talents']['5']['Name']}</h2>
          <p>{info['Talents']['5']['Description']}</p>
        </div>
        <div>
          <h2>{info['Talents']['6']['Name']}</h2>
          <p>{info['Talents']['6']['Description']}</p>
        </div>
      </div>
    </div>
    <h1>Awareness</h1>
    <div>
      {Object.keys(info['Awareness']).map((cur)=>{
        return <div class='awarenessitem'>
          <div><img src=`/P5XWiki/awareness/Awareness${cur}.png`/><h2>{info['Awareness'][cur]['Name']}</h2></div>
          <p>{info['Awareness'][cur]['Description']}</p>
        </div>
      })}
    </div>
    {info["Weapons"] && <h1>Weapons:</h1>}
    <ul class="weaponlist">
      {
        info["Weapons"] && 
        info["Weapons"].map((id)=>{
          const Weapon = Weapons[id]
          return <WeaponItem name={Weapon['Name']} path={id} rarity={Weapon['Rarity']} passive={Weapon['Passive']} description={Weapon['Description']}, scalings={Weapon['Scalings']}/>
        })
      }
    </ul>
    {info["Build"] && <Recommendation build={info["Build"]}/>}
  </main>
</Layout>

<script define:vars={{info}}>
  
  const slider1 = document.querySelector('input.slider1');
  const slider2 = document.querySelector('input.slider2');
  const slider3 = document.querySelector('input.slider3');

  slider1.addEventListener("change", (event) => {
      const oldText = document.querySelector('h2.skill1container').innerText.split(' (')[0]
      document.querySelector('h2.skill1container').innerText = `${oldText} (Lv. ${event.target.value})`;
      document.querySelector('p.skill1desc').innerHTML = info['Talents']['1']['Formula'].reduce((acc,cur) =>
            acc.replace("%s",Math.round(eval(cur.replaceAll('skillLv',`${event.target.value}`))*10)/10),info['Talents']['1']['Description']
          )
  });

  slider2.addEventListener("change", (event) => {
    const oldText = document.querySelector('h2.skill2container').innerText.split(' (')[0]
    document.querySelector('h2.skill2container').innerText = `${oldText} (Lv. ${event.target.value})`;
    document.querySelector('p.skill2desc').innerHTML = info['Talents']['2']['Formula'].reduce((acc,cur) =>
            acc.replace("%s",Math.round(eval(cur.replaceAll('skillLv',`${event.target.value}`))*10)/10),info['Talents']['2']['Description']
          )
  })

  slider3.addEventListener("change", (event) => {
    const oldText = document.querySelector('h2.skill3container').innerText.split(' (')[0]
    document.querySelector('h2.skill3container').innerText = `${oldText} (Lv. ${event.target.value})`;
    document.querySelector('p.skill3desc').innerHTML = info['Talents']['3']['Formula'].reduce((acc,cur) =>
            acc.replace("%s",Math.round(eval(cur.replaceAll('skillLv',`${event.target.value}`))*10)/10),info['Talents']['3']['Description']
          )
  })

  if(info['Talents']['4']['Type'] == 1){
    const slider4 = document.querySelector('input.slider4');
    slider4.addEventListener("change", (event) => {
      const oldText = document.querySelector('h2.skill4container').innerText.split(' (')[0]
      document.querySelector('h2.skill4container').innerText = `${oldText} (Lv. ${event.target.value})`;
      document.querySelector('p.skill4desc').innerHTML = info['Talents']['4']['Formula'].reduce((acc,cur) =>
              acc.replace("%s",Math.round(eval(cur.replaceAll('skillLv',`${event.target.value}`))*10)/10),info['Talents']['4']['Description']
            )
    })
  }
</script>

<style>

  main {
    margin: 0 auto;
		max-width: 960px;
    padding: 1rem;
		font-size: 20px;
		line-height: 1.6;
    color: white;
	}

  .FirstSection {
    display: grid;
    grid-template-columns: 1fr;
    gap: 30px;
  }

  .FirstSection .CharacterCard {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .FirstSection img {
    max-width: 50%;
  }

  .CharacterInfo .CharacterIntro{
    display: flex;
    gap: 20px;
    align-items: center;
  }

  .CharacterInfo .CharacterIntro img{
    width: 7%;
    height: 7%;
    aspect-ratio: auto;
  }

  .CharacterInfo table{
    width: 100%;
  }

  .CharacterInfo table tr td:last-child{
    text-align: right;
  }

  .skilltitle{
    display: flex;
    justify-content: flex-start;
    align-content: center;
    align-items: center;
    gap: 1rem;
  }
  .skilltitle img{
    aspect-ratio: auto;
  }

  .weaponlist{
    max-width: 100vw;
  }

  .awarenessitem{
    div {
      display: flex;
      align-content: center;
      img {
        width: 50px;
        height: 50px;
        margin-right: .75rem;
        align-self: center;
      }
    }
  }
  
  p {
    white-space:pre-wrap;
  }
</style>